name: Build

on:
  push:
    paths:
    - 'app/**'
  pull_request:
    paths:
    - 'app/**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: Install dependencies
      run: npm ci

    - name: Build App (Development)
      run: npm run build --if-present
      if: (!startsWith(github.ref, 'refs/tags/v'))
      env:
        OVERRIDE_VERSION: ${{ format('#{0}-dev', github.run_number) }}
      
    - name: Build App (Release)
      run: npm run build --if-present
      if: (startsWith(github.ref, 'refs/tags/v'))

    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: app-dist
        path: app/dist

  release:
    if: github.event_name == 'push'
    needs:
    - build

    name: Release
    runs-on: ubuntu-latest

    steps:
    - name: Set target path (Development)
      uses: allenevans/set-env@v1.0.0
      if: (!startsWith(github.ref, 'refs/tags/v'))
      with:
        RELEASE_VERSION: ${{ format('#{0}-dev', github.run_number) }}
        TARGET_BRANCH: 'gh-pages'
        TARGET_PATH: 'app/dev'

    - name: Get version number (Release)
      uses: olegtarasov/get-tag@v2
      if: (startsWith(github.ref, 'refs/tags/v'))

    - name: Set target path (Release)
      uses: allenevans/set-env@v1.0.0
      if: (startsWith(github.ref, 'refs/tags/v'))
      with:
        RELEASE_VERSION: ${{ env.GIT_TAG_NAME }}
        TARGET_BRANCH: 'gh-pages'
        TARGET_PATH: 'app/dist'

    - uses: actions/checkout@v2
      with:
        ref: ${{ env.TARGET_BRANCH }}

    - name: Download Artifact
      uses: actions/download-artifact@v1
      with:
        name: app-dist
        path: ${{ env.TARGET_PATH }}

    - name: Add distribution files
      run: git add "$TARGET_PATH"

    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "Release new version $RELEASE_VERSION"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ env.TARGET_BRANCH }}
